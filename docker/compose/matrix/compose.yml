networks:
  proxy:
    external: true
  matrix:
    name: matrix

services:
  matrix-postgres:
    container_name: matrix-postgres
    image: postgres:15-alpine
    restart: unless-stopped
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: dendrite
      POSTGRES_DATABASE: dendrite
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dendrite"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - matrix

  matrix:
    container_name: matrix
    hostname: monolith
    image: matrixdotorg/dendrite-monolith:latest
    volumes:
      - ./data/config:/etc/dendrite
      - ./data/media:/var/dendrite/media
      - ./data/jetstream:/var/dendrite/jetstream
      - ./data/search-index:/var/dendrite/searchindex
      - ./data/log:/var/dendrite/log
    depends_on:
      matrix-postgres:
        condition: service_healthy
    networks:
      - matrix
    restart: unless-stopped

  matrix-nginx:
    image: nginx:latest
    container_name: matrix-nginx
    restart: "unless-stopped"
    networks:
      - matrix
      - proxy
    volumes:
      - ./config/nginx/dendrite.conf:/etc/nginx/conf.d/dendrite.conf:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.matrix-nginx.middlewares=crowdsec-traefik-bouncer"
      - "traefik.http.routers.matrix-nginx.rule=Host(`matrix.conway.dev`)"
      - "traefik.http.routers.matrix-nginx.tls.certresolver=prod"
      - "traefik.http.services.matrix-nginx.loadbalancer.server.port=80"
