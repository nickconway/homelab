networks:
  proxy:
    external: true
  crowdsec:
    name: crowdsec

services:
  crowdsec:
    image: crowdsecurity/crowdsec:latest
    environment:
      PUID: 1000
      PGID: 1000
      GID: "${GID-1000}"
      COLLECTIONS: "crowdsecurity/linux crowdsecurity/traefik firix/authentik"
    volumes:
      - ../traefik/data/logs:/var/log/traefik/:ro
      - ./data/config:/etc/crowdsec/
      - ./data/db:/var/lib/crowdsec/data/
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - crowdsec
    restart: unless-stopped

  crowdsec-traefik-bouncer:
    image: fbonalair/traefik-crowdsec-bouncer:latest
    environment:
      PUID: 1000
      PGID: 1000
      CROWDSEC_BOUNCER_API_KEY: ${CROWDSEC_BOUNCER_API_KEY}
      CROWDSEC_AGENT_HOST: crowdsec:8080
      GIN_MODE: release
    networks:
      - proxy
      - crowdsec
    depends_on:
      - crowdsec
    restart: unless-stopped

  crowdsec-dashboard:
    image: git.${SERVICES_BASE_DOMAIN}/${GITEA_USER}/crowdsec-dashboard:latest
    restart: unless-stopped
    environment:
      PUID: 1000
      PGID: 1000
      MB_DB_FILE: /data/metabase.db
      MGID: "${GID-1000}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.crowdsec.middlewares=crowdsec-traefik-bouncer,auth"
      - "traefik.http.routers.crowdsec.rule=Host(`security.${SERVICES_BASE_DOMAIN}`)"
      - "traefik.http.routers.crowdsec.tls=true"
      - "traefik.http.services.crowdsec.loadbalancer.server.port=3000"
    depends_on:
      - 'crowdsec'
    volumes:
      - ./data/db:/metabase-data/
    networks:
      proxy:
      crowdsec:
