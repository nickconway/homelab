networks:
  proxy:
    external: true

services:
  headscale:
    image: headscale/headscale:latest
    restart: unless-stopped
    environment:
      - PUID=1000 # User ID to run as
      - PGID=1000 # Group ID to run as
      - HEADSCALE_EXPERIMENTAL_FEATURE_SSH=true
    volumes:
      - ./data/headscale:/etc/headscale/
    networks:
      - proxy
    entrypoint: headscale serve
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.headscale.middlewares=crowdsec-traefik-bouncer"
      - "traefik.http.routers.headscale.rule=Host(`vpn.${SERVICES_BASE_DOMAIN}`)"
      - "traefik.http.routers.headscale.tls=true"
      - "traefik.http.services.headscale.loadbalancer.server.port=8080"

  headplane:
      image: ghcr.io/tale/headplane:0.6.0
      restart: unless-stopped
      networks:
        - proxy
      environment:
        - PUID=1000 # User ID to run as
        - PGID=1000 # Group ID to run as
      volumes:
        - './data/headplane/config.yaml:/etc/headplane/config.yaml'
        - './data/headscale/config.yaml:/etc/headscale/config.yaml'
        - './data/headscale/extra-records.json:/etc/headscale/extra-records.json'
        - './data/headplane/data:/var/lib/headplane'
        - '/var/run/docker.sock:/var/run/docker.sock:ro'
      labels:
        - "me.tale.headplane.target=headscale"
        - "traefik.enable=true"
        - "traefik.http.routers.headplane.middlewares=crowdsec-traefik-bouncer,auth"
        - "traefik.http.routers.headplane.rule=Host(`vpn.${SERVICES_BASE_DOMAIN}`) && PathPrefix(`/admin`)"
        - "traefik.http.routers.headplane.tls=true"
        - "traefik.http.services.headplane.loadbalancer.server.port=3000"
