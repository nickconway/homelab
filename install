#!/bin/bash
set -euo pipefail

export GUM_SPIN_SHOW_ERROR=true

export GUM_CHOOSE_CURSOR_FOREGROUND=10
export GUM_CHOOSE_HEADER_FOREGROUND=9
export GUM_CHOOSE_SELECTED_FOREGROUND=11

export GUM_SPIN_SPINNER_FOREGROUND=$GUM_CHOOSE_HEADER_FOREGROUND

export GUM_INPUT_HEADER_FOREGROUND=$GUM_CHOOSE_HEADER_FOREGROUND
export GUM_INPUT_CURSOR_FOREGROUND=$GUM_CHOOSE_SELECTED_FOREGROUND

export GUM_CONFIRM_PROMPT_FOREGROUND=$GUM_CHOOSE_HEADER_FOREGROUND
export GUM_CONFIRM_SELECTED_BACKGROUND=$GUM_CHOOSE_SELECTED_FOREGROUND

if [[ -n "${DEBUG_MODE:-}" ]]; then
    set -x
    export DEBUG_MODE
fi

SCRIPT_DIR="$(dirname "$(realpath "$0")")"
export SCRIPT_DIR
cd "$SCRIPT_DIR"

while getopts 'dh:kt' flag; do
    case $flag in
        d) export BOOTSTRAP_DOCKER=true;;
        h)
            REMOTE_DIR="$(gum input --header "Where would you like to sync the repository to on the remote host?" --placeholder "Git/homelab" < /dev/tty)"
            REMOTE_DIR="${REMOTE_DIR:-Git/homelab}"
            rsync -ahuz --mkpath "$SCRIPT_DIR/" "$OPTARG:$REMOTE_DIR"
            shift "$((OPTIND-1))"
            ssh -t "$OPTARG" "$REMOTE_DIR/install $*"
            exit
            ;;
        k) export BOOTSTRAP_KUBERNETES=true;;
        t) export BOOTSTRAP_TALOS=true;;
        *) exit 1;;
    esac
done

source "$SCRIPT_DIR/utils"

export PATH="$HOME/.local/bin:$PATH"
export PATH="$SCRIPT_DIR/dotfiles/.local/bin:$PATH"

if ! command -v go &> /dev/null; then
    echo "Installing go..."

    if command -v apt &> /dev/null; then
        sudo apt install -y golang
    fi

    if command -v pacman &> /dev/null; then
        sudo pacman -S go
    fi
fi

export GOPATH=~/.local/go/packages
mkdir -p "$GOPATH"

if ! command -v gum &>/dev/null; then
    echo "Installing gum..."
    go install github.com/charmbracelet/gum@latest
fi

get-env-vars

if [[ -n "${GPG_EMAIL:-}" ]] && [[ -z "${GPG_KEY:-}" ]] && gpg --with-colons --list-keys "$GPG_EMAIL" &> /dev/null; then
    GPG_KEY="$(gpg --with-colons --list-keys "$GPG_EMAIL" | awk -F: '/^pub:.*/ { getline; print $10}')"
    export GPG_KEY
fi

./scripts/install-docker-stacks
./scripts/create-talos-vms
./scripts/install-kubernetes-manifests

echo "Homelab setup complete!"
