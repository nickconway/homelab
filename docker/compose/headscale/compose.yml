networks:
  proxy:
    external: true

services:
  headscale:
    image: headscale/headscale:latest
    container_name: headscale
    restart: unless-stopped
    environment:
      - PUID=1000 # User ID to run as
      - PGID=1000 # Group ID to run as
      - HEADSCALE_EXPERIMENTAL_FEATURE_SSH=true
    volumes:
      - ./data/config:/etc/headscale/
    # ports:
    #   - 8080:8080
    #   - 9090:9090
    networks:
      - proxy
    entrypoint: headscale serve
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.headscale.middlewares=crowdsec-traefik-bouncer"
      - "traefik.http.routers.headscale.rule=Host(`vpn.${SERVICES_BASE_DOMAIN}`)"
      - "traefik.http.routers.headscale.tls=true"
      - "traefik.http.routers.headscale.tls.certresolver=prod"
      - "traefik.http.services.headscale.loadbalancer.server.port=8080"

  headscale-ui:
    image: ghcr.io/gurucomputing/headscale-ui:latest
    restart: unless-stopped
    container_name: headscale-ui
    depends_on:
      - headscale
    environment:
      - PUID=1000 # User ID to run as
      - PGID=1000 # Group ID to run as
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.headscale-ui.middlewares=crowdsec-traefik-bouncer,auth"
      - "traefik.http.routers.headscale-ui.rule=Host(`vpn.${SERVICES_BASE_DOMAIN}`) && PathPrefix(`/web`)"
      - "traefik.http.routers.headscale-ui.tls=true"
      - "traefik.http.routers.headscale-ui.tls.certresolver=prod"
      - "traefik.http.services.headscale-ui.loadbalancer.server.port=8080"
