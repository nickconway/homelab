#!/bin/bash
set -euo pipefail

if [[ -n "${DEBUG_MODE:-}" ]]; then
    set -x
    export DEBUG_MODE
fi

SCRIPT_DIR="$(dirname "$(realpath "$0")")"
export SCRIPT_DIR
cd "$SCRIPT_DIR"

source "$SCRIPT_DIR/utils"

export PATH="$SCRIPT_DIR/dotfiles/.local/bin:$PATH"

export GOROOT=~/.local/go/go
export GOPATH=~/.local/go/packages
export PATH="$GOROOT"/bin:"$GOPATH"/bin:$PATH

export GUM_SPIN_SHOW_ERROR=true

export GUM_CHOOSE_CURSOR_FOREGROUND=10
export GUM_CHOOSE_HEADER_FOREGROUND=9
export GUM_CHOOSE_SELECTED_FOREGROUND=11

export GUM_SPIN_SPINNER_FOREGROUND=$GUM_CHOOSE_HEADER_FOREGROUND

export GUM_INPUT_HEADER_FOREGROUND=$GUM_CHOOSE_HEADER_FOREGROUND
export GUM_INPUT_CURSOR_FOREGROUND=$GUM_CHOOSE_SELECTED_FOREGROUND

export GUM_CONFIRM_PROMPT_FOREGROUND=$GUM_CHOOSE_HEADER_FOREGROUND
export GUM_CONFIRM_SELECTED_BACKGROUND=$GUM_CHOOSE_SELECTED_FOREGROUND

if ! command -v go &> /dev/null; then
    echo "Installing go..."
    cd "$HOME/.local"
    mkdir -p go

    GO_VERSION="$(curl -s 'https://go.dev/dl/?mode=json' | grep version | head -n 1 | xargs | awk '{print $2}' | tr -d ',')"

    ARCH="$(uname -m)"
    if [[ "$ARCH" == "x86_64" ]]; then
        GO_ARCH="amd64"
    elif [[ "$ARCH" == "aarch64" ]]; then
        GO_ARCH="arm64"
    fi

    curl -sL "https://go.dev/dl/$GO_VERSION.linux-$GO_ARCH.tar.gz" -O --output-dir /tmp
    tar xzf "/tmp/$GO_VERSION.linux-$GO_ARCH.tar.gz" -C go
    rm "/tmp/$GO_VERSION.linux-$GO_ARCH.tar.gz"

    cd "$SCRIPT_DIR"
fi

if ! command -v gum &>/dev/null; then
    echo "Installing gum..."
    go install github.com/charmbracelet/gum@latest
fi

get-env-vars

if [[ -n "${GPG_EMAIL:-}" ]] && [[ -z "${GPG_KEY:-}" ]] && gpg --with-colons --list-keys "$GPG_EMAIL" &> /dev/null; then
    GPG_KEY="$(gpg --with-colons --list-keys "$GPG_EMAIL" | awk -F: '/^pub:.*/ { getline; print $10}')"
    export GPG_KEY
fi

./scripts/bootstrap-docker-stacks
./scripts/bootstrap-talos
./scripts/bootstrap-kubernetes

echo "Homelab setup complete!"
