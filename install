#!/bin/bash
set -euo pipefail

if [[ -n "${DEBUG_MODE:-}" ]]; then
    set -x
    export DEBUG_MODE
fi

export SCRIPT_DIR
SCRIPT_DIR="$(dirname "$(realpath "$0")")"

export PATH="$SCRIPT_DIR/dotfiles/.local/bin:$PATH"
cd "$SCRIPT_DIR"

if ! command -v go &>/dev/null; then
    echo "Installing go..."
    cd "$HOME/.local"

    GO_VERSION="$(curl -s 'https://go.dev/dl/?mode=json' | grep version | head -n 1 | xargs | awk '{print $2}' | tr -d ',')"
    curl -sL "https://go.dev/dl/$GO_VERSION.linux-amd64.tar.gz" -O --output-dir /tmp
    tar xvzf "/tmp/$GO_VERSION.linux-amd64.tar.gz"
    rm "/tmp/$GO_VERSION.linux-amd64.tar.gz"
    export PATH="$HOME/.local/go/go/bin:$PATH"
fi

if ! command -v gum &>/dev/null; then
    echo "Installing gum..."
    go install github.com/charmbracelet/gum@latest &>/dev/null
fi

export GUM_SPIN_SHOW_ERROR=true

export GUM_CHOOSE_CURSOR_FOREGROUND=10
export GUM_CHOOSE_HEADER_FOREGROUND=9
export GUM_CHOOSE_SELECTED_FOREGROUND=11

export GUM_SPIN_SPINNER_FOREGROUND=$GUM_CHOOSE_HEADER_FOREGROUND

export GUM_INPUT_HEADER_FOREGROUND=$GUM_CHOOSE_HEADER_FOREGROUND
export GUM_INPUT_CURSOR_FOREGROUND=$GUM_CHOOSE_SELECTED_FOREGROUND

export GUM_CONFIRM_PROMPT_FOREGROUND=$GUM_CHOOSE_HEADER_FOREGROUND
export GUM_CONFIRM_SELECTED_BACKGROUND=$GUM_CHOOSE_SELECTED_FOREGROUND

if [[ -z "${NO_REPO_PULL:-}" ]]; then
    gum spin --title "Updating repo..." -- git pull --recurse-submodules
fi

if [[ -z "${SERVICES_BASE_DOMAIN:-}" ]]; then
    while [[ -z "${SERVICES_BASE_DOMAIN:-}" ]]; do
        SERVICES_BASE_DOMAIN="$(gum input --header "What is the base domain you'll be using?" --placeholder 'example.com')"
    done

    if ! grep -q 'SERVICES_BASE_DOMAIN' "$HOME/.$(basename "$SHELL")rc"; then
        echo >>"$HOME"/."$(basename "$SHELL")"rc
        echo "export SERVICES_BASE_DOMAIN=\"$SERVICES_BASE_DOMAIN\"" >>"$HOME"/."$(basename "$SHELL")"rc
    fi

    export SERVICES_BASE_DOMAIN
fi

if [[ -z "${GPG_EMAIL:-}" ]]; then
    while [[ -z "${GPG_EMAIL:-}" ]]; do
        GPG_EMAIL="$(gum input --header "What is your GPG email?" --placeholder 'name@example.com')"
    done

    if ! grep -q 'GPG_EMAIL' "$HOME/.$(basename "$SHELL")rc"; then
        echo >>"$HOME"/."$(basename "$SHELL")"rc
        echo "export GPG_EMAIL=\"$GPG_EMAIL\"" >>"$HOME"/."$(basename "$SHELL")"rc
    fi

    export GPG_EMAIL
fi

if [[ -z "${GPG_KEY:-}" ]]; then
    GPG_KEY="$(gpg --with-colons --list-keys "$GPG_EMAIL" | awk -F: '/^pub:.*/ { getline; print $10}')"
    export GPG_KEY
fi

./scripts/bootstrap-docker-stacks
./scripts/bootstrap-talos
./scripts/bootstrap-kubernetes

echo "Homelab setup complete!"
