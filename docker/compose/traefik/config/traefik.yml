################################################################
#
# Configuration sample for Traefik v2.
#
# For Traefik v1: https://github.com/traefik/traefik/blob/v1.7/traefik.sample.toml
#
################################################################

################################################################
# Global configuration
################################################################
global:
  checkNewVersion: true
  sendAnonymousUsage: false

################################################################
# EntryPoints configuration
################################################################

# EntryPoints definition
#
# Optional
#
entryPoints:
  web:
    address: :80
    http:
      redirections:
        entryPoint:
          to: websecure
          scheme: https

  websecure:
    address: :443
    transport:
      # This helps when pushing large docker images to the container registry
      respondingTimeouts:
        readTimeout: 5m
        idleTimeout: 5m
    forwardedHeaders:
      trustedIPs:
        - "127.0.0.1/32"
        - "10.0.10.2"

  mail:
    address: :465

  talos:
    address: :50000

  minecraft:
    address: :25565


serversTransport:
  insecureSkipVerify: true

################################################################
# Traefik logs configuration
################################################################

# Traefik logs
# Enabled by default and log to stdout
#
# Optional
#
log:
  # Log level
  #
  # Optional
  # Default: "ERROR"
  #
  level: INFO

  # Sets the filepath for the traefik log. If not specified, stdout will be used.
  # Intermediate directories are created if necessary.
  #
  # Optional
  # Default: os.Stdout
  #
  filePath: "/var/log/traefik/traefik.log"

  # Format is either "json" or "common".
  #
  # Optional
  # Default: "common"
  #
#  format: json

metrics:
  addInternals: true
  otlp: {}

tracing:
  addInternals: true

################################################################
# Access logs configuration
################################################################

# Enable access logs
# By default it will write to stdout and produce logs in the textual
# Common Log Format (CLF), extended with additional fields.
#
# Optional
#
accessLog:
  # Sets the file path for the access log. If not specified, stdout will be used.
  # Intermediate directories are created if necessary.
  #
  # Optional
  # Default: os.Stdout
  #
  filePath: "/var/log/traefik/access.log"

  # Format is either "json" or "common".
  #
  # Optional
  # Default: "common"
  #
  format: json

################################################################
# API and dashboard configuration
################################################################

# Enable API and dashboard
#
# Optional
#
api:
  # Enable the API in insecure mode
  #
  # Optional
  # Default: false
  #
  insecure: true

  # Enabled Dashboard
  #
  # Optional
  # Default: true
  #
  dashboard: true
  debug: true

################################################################
# Ping configuration
################################################################

# Enable ping
#ping:
# Name of the related entry point
#
# Optional
# Default: "traefik"
#
#  entryPoint: traefik

################################################################
# Docker configuration backend
################################################################

providers:
  file:
    directory: /etc/traefik/configs/
    watch: true

  # Enable Docker configuration backend
  docker:
    # Docker server endpoint. Can be a tcp or a unix socket endpoint.
    #
    # Required
    # Default: "unix:///var/run/docker.sock"
    #
    endpoint: "unix:///var/run/docker.sock"
    network: proxy

    # Default host rule.
    #
    # Optional
    # Default: "Host(`{{ normalize .Name }}`)"
    #
    # defaultRule: Host(`{{ normalize .Name }}.docker.localhost`)

    # Expose containers by default in traefik
    #
    # Optional
    # Default: true
    #
    exposedByDefault: false

certificatesResolvers:
  stage:
    acme:
      storage: /acme.json
      caServer: "https://acme-staging-v02.api.letsencrypt.org/directory"
      dnsChallenge:
        provider: cloudflare
  prod:
    acme:
      storage: /acme.json
      caServer: "https://acme-v02.api.letsencrypt.org/directory"
      dnsChallenge:
        provider: cloudflare

experimental:
  localPlugins:
    wakeonlan:
      moduleName: "github.com/MarkusJx/traefik-wol"
