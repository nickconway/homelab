#!/bin/bash
set -euo pipefail

if [[ -n "${DEBUG_MODE:-}" ]]; then
    set -x
    export DEBUG_MODE
fi

cd "$SCRIPT_DIR/kubernetes/talos"

if [[ -e talosconfig ]] || [[ -n "${BOOTSTRAP_TALOS_CLUSTER:-}" ]] || gum confirm "A talos cluster has not been configured, would you like to configure it now?"; then
    exit 0
fi

if [[ -z "${TALOS_API_SERVER:-}" ]]; then
    while [[ -z "${TALOS_API_SERVER:-}" ]]; do
        TALOS_API_SERVER="$(gum input --header "What is the hostname of the API server (without http(s) or port)?")"
    done

    if ! grep -q 'TALOS_API_SERVER' "$EXPORT_FILE"; then
        echo "export TALOS_API_SERVER=\"$TALOS_API_SERVER\"" >>"$EXPORT_FILE"
    fi
fi

if [[ -z "${TALOS_ENDPOINT:-}" ]]; then
    while [[ -z "${TALOS_ENDPOINT:-}" ]]; do
        TALOS_ENDPOINT="$(gum input --header "What is the hostname of the talos API endpoint (NOT the api server endpoint)?")"
    done

    if ! grep -q 'TALOS_ENDPOINT' "$EXPORT_FILE"; then
        echo "export TALOS_ENDPOINT=\"$TALOS_ENDPOINT\"" >>"$EXPORT_FILE"
    fi
fi

cd "$SCRIPT_DIR/kubernetes/talos"

if [[ -e secrets.encrypted.yaml ]] || [[ -e secrets.yaml ]]; then
    exit 0
fi

talosctl gen secrets
sops encrypt --pgp "$GPG_KEY" secrets.yaml >secrets.encrypted.yaml
rm secrets.yaml

SECRETS="$(sops decrypt secrets.encrypted.yaml)"

talosctl gen config proxmox "https://$TALOS_API_SERVER:6443" \
    --install-image factory.talos.dev/installer/ce4c980550dd2ab1b17bbf2b08801c7eb59418eafe8f279833297925d67c7515:v1.9.2 \
    --with-secrets <(echo "$SECRETS") \
    --force \
    --config-patch-control-plane @patches/vip.yaml \
    --additional-sans "$TALOS_ENDPOINT"

NODES=(
    "10.0.10.100 talos-cp-00 controlplane.yaml"
    "10.0.10.101 talos-cp-01 controlplane.yaml"
    "10.0.10.102 talos-cp-02 controlplane.yaml"

    "10.0.10.150 talos-worker-00 worker.yaml"
    "10.0.10.151 talos-worker-01 worker.yaml"
    "10.0.10.152 talos-worker-02 worker.yaml"
)

for c in "${NODES[@]}"; do
    IP="$(echo "$c" | awk '{print $1}')"
    NAME="$(echo "$c" | awk '{print $2}')"
    FILE="$(echo "$c" | awk '{print $3}')"

    talosctl apply-config \
        -n "$IP" \
        -e "$IP" \
        --file "$FILE" \
        --config-patch '[{ "op": "add", "path": "/machine/network/hostname", "value": "'"$NAME"'"}]'
done

IP="$(echo "${NODES[0]}" | awk '{print $1}')"
talosctl bootstrap -n "$IP" -e "$IP"

talosctl config --talosconfig talosconfig node "$TALOS_API_SERVER"
talosctl config --talosconfig talosconfig endpoint "$TALOS_ENDPOINT"

talosctl config merge talosconfig
