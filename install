#!/bin/bash
set -euo pipefail

if [[ -n "${DEBUG_MODE:-}" ]]; then
    set -x
    export DEBUG_MODE
fi

export SCRIPT_DIR
SCRIPT_DIR="$(dirname "$(realpath "$0")")"

export PATH="$SCRIPT_DIR/dotfiles/.local/bin:$PATH"
cd "$SCRIPT_DIR"

if ! command -v gum &>/dev/null; then
    if ! command -v go &>/dev/null; then
        echo "Golang is not installed, exiting"
        exit 1
    fi
    echo "Installing gum..."
    go install github.com/charmbracelet/gum@latest &>/dev/null
fi

export GUM_SPIN_SHOW_ERROR=true

export GUM_CHOOSE_CURSOR_FOREGROUND=10
export GUM_CHOOSE_HEADER_FOREGROUND=9
export GUM_CHOOSE_SELECTED_FOREGROUND=11

export GUM_SPIN_SPINNER_FOREGROUND=$GUM_CHOOSE_HEADER_FOREGROUND

export GUM_INPUT_HEADER_FOREGROUND=$GUM_CHOOSE_HEADER_FOREGROUND
export GUM_INPUT_CURSOR_FOREGROUND=$GUM_CHOOSE_SELECTED_FOREGROUND

export GUM_CONFIRM_PROMPT_FOREGROUND=$GUM_CHOOSE_HEADER_FOREGROUND
export GUM_CONFIRM_SELECTED_BACKGROUND=$GUM_CHOOSE_SELECTED_FOREGROUND

if [[ -z "${NO_REPO_PULL:-}" ]]; then
    gum spin --title "Updating repo..." -- git pull --recurse-submodules
fi

./scripts/bootstrap-docker-stacks
./scripts/bootstrap-talos
./scripts/bootstrap-kubernetes
./scripts/bootstrap-kubernetes-manifests
